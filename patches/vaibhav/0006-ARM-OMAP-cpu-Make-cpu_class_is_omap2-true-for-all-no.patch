From c01193b06fbe91ce85dcc93270a2d5510c68b9e6 Mon Sep 17 00:00:00 2001
From: Vaibhav Hiremath <hvaibhav@ti.com>
Date: Sat, 9 Jun 2012 17:35:52 +0530
Subject: [PATCH 6/8] ARM: OMAP: cpu: Make cpu_class_is_omap2 true for all
 non-omap1 platforms

As omap1 and omap2 will never be compiled together, due to
different compiler flags, so we can simply make
cpu_class_is_omap2() = true, for all non-omap1 platforms.

In order to fix build error from plat-omap/sram.c file,
omap_type() function is encapsulated under #ifdef CONFIG_ARCH_OMAP2PLUS.

Signed-off-by: Vaibhav Hiremath <hvaibhav@ti.com>
CC: Tony Lindgren <tony@atomide.com>

Boot tested on Beable Bone, AM37x EVM and build tested for omap1.
It would be helpful if someone can test it on omap1 platform.
---
 arch/arm/plat-omap/include/plat/cpu.h |   14 ++++++++++++--
 1 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-omap/include/plat/cpu.h b/arch/arm/plat-omap/include/plat/cpu.h
index 68b180e..e338370 100644
--- a/arch/arm/plat-omap/include/plat/cpu.h
+++ b/arch/arm/plat-omap/include/plat/cpu.h
@@ -42,7 +42,18 @@
 #define OMAP2_DEVICE_TYPE_GP		3
 #define OMAP2_DEVICE_TYPE_BAD		4
 
+#ifdef CONFIG_ARCH_OMAP2PLUS
 int omap_type(void);
+#else
+static inline int omap_type(void)
+{
+	/*
+	 * Safe to return 0, since this function will not
+	 * be called for omap1.
+	 */
+	return 0;
+}
+#endif
 
 /*
  * omap_rev bits:
@@ -371,8 +382,7 @@ IS_OMAP_TYPE(3430, 0x3430)
 /* Macros to detect if we have OMAP1 or OMAP2 */
 #define cpu_class_is_omap1()	(cpu_is_omap7xx() || cpu_is_omap15xx() || \
 				cpu_is_omap16xx())
-#define cpu_class_is_omap2()	(cpu_is_omap24xx() || cpu_is_omap34xx() || \
-				cpu_is_omap44xx() || soc_is_omap54xx())
+#define cpu_class_is_omap2()	!cpu_class_is_omap1()
 
 /* Various silicon revisions for omap2 */
 #define OMAP242X_CLASS		0x24200024
-- 
1.7.7.6

